from pathlib import Path
from typing import Any, Final
from .enums import HistoricalKlinesType

class BaseClient:
    KLINE_INTERVAL_1SECOND: Final[str] = ...
    KLINE_INTERVAL_1MINUTE: Final[str] = ...
    KLINE_INTERVAL_3MINUTE: Final[str] = ...
    KLINE_INTERVAL_5MINUTE: Final[str] = ...
    KLINE_INTERVAL_15MINUTE: Final[str] = ...
    KLINE_INTERVAL_30MINUTE: Final[str] = ...
    KLINE_INTERVAL_1HOUR: Final[str] = ...
    KLINE_INTERVAL_2HOUR: Final[str] = ...
    KLINE_INTERVAL_4HOUR: Final[str] = ...
    KLINE_INTERVAL_6HOUR: Final[str] = ...
    KLINE_INTERVAL_8HOUR: Final[str] = ...
    KLINE_INTERVAL_12HOUR: Final[str] = ...
    KLINE_INTERVAL_1DAY: Final[str] = ...
    KLINE_INTERVAL_3DAY: Final[str] = ...
    KLINE_INTERVAL_1WEEK: Final[str] = ...
    KLINE_INTERVAL_1MONTH: Final[str] = ...

    SIDE_BUY: Final[str] = ...
    SIDE_SELL: Final[str] = ...

    def __init__(
        self,
        api_key: str | None = ...,
        api_secret: str | None = ...,
        requests_params: dict[str, Any] | None = ...,
        tld: str = ...,
        base_endpoint: str = ...,
        testnet: bool = ...,
        private_key: str | Path | None = ...,
        private_key_pass: str | None = ...,
    ) -> None: ...


KLine = list[int | str]


class Client(BaseClient):
    def get_historical_klines(
        self,
        symbol: str,
        interval: str,
        start_str: str | int = ...,
        end_str: str | int = ...,
        limit: int = ...,
        klines_type: HistoricalKlinesType = ...,
    ) -> list[KLine]: ...
